"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const constants_1 = require("./constants");
exports.isCustomField = (field) => {
    return field.includes('__');
};
exports.isMeasureByMonetary = (measureBy) => {
    const isMeasureByMonetaryType = [
        constants_1.MeasureByType.VALUE,
        constants_1.MeasureByType.AVERAGE_VALUE,
        constants_1.MeasureByType.WEIGHTED_VALUE,
        constants_1.MeasureByType.PAYMENTS_AMOUNT,
        constants_1.MeasureByType.PAYMENTS_CHANGE_AMOUNT,
    ].includes(measureBy);
    return (isMeasureByMonetaryType || (exports.isCustomField(measureBy) && measureBy.startsWith('monetary')));
};
exports.isMeasureByNumerical = (measureBy) => {
    return exports.isCustomField(measureBy) && measureBy.startsWith('numerical');
};
exports.getMeasureByFilterType = (measureBy) => {
    if (exports.isMeasureByMonetary(measureBy) || exports.isMeasureByNumerical(measureBy)) {
        return constants_1.MeasureByType.VALUE;
    }
    return constants_1.MeasureByType.COUNT;
};
exports.getSegmentByFilterToUse = (chartType, segmentByFilterFromReport) => {
    const isPieChart = chartType === constants_1.ChartType.PIE;
    const hasSelectedSegmentFilter = segmentByFilterFromReport !== 'none';
    /* eslint-disable-next-line no-undefined */
    const customSegmentByFilter = isPieChart ? constants_1.DEFAULT_PIE_CHART_SEGMENT_BY : undefined;
    return hasSelectedSegmentFilter ? segmentByFilterFromReport : customSegmentByFilter;
};
exports.getFieldType = (filter) => {
    const filterPrefix = filter && filter.split('__')[0];
    return {
        filter,
        type: filterPrefix,
    };
};
