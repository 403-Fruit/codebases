"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const lodash_1 = require("lodash");
const helpers_1 = require("./helpers");
const constants_1 = require("./constants");
const getFieldsWithLabelFields = (queryFields) => {
    const labelFields = [];
    queryFields.forEach((field) => {
        const fieldType = helpers_1.getFieldType(field).type;
        if (constants_1.WITH_LABELS.includes(fieldType)) {
            labelFields.push(`${field}Label`);
        }
    });
    return [...queryFields, ...labelFields];
};
/*
    Returns an object from array, where array items are keys and values are "true"
    e.g. ['title', 'value] becomes {title: true, value: true}
*/
exports.prepareForQueryBuilder = (fields) => {
    const fieldsWithAddedLabelFields = getFieldsWithLabelFields(fields);
    return fieldsWithAddedLabelFields.sort().reduce((object, item) => {
        object[item] = true;
        return object;
    }, {});
};
exports.getStats = ({ groupByFilter, measureByFilterType, segmentByFilter, }) => {
    const statsElements = [groupByFilter, measureByFilterType, ...constants_1.STATS_FIELDS];
    if (segmentByFilter) {
        statsElements.push(segmentByFilter);
    }
    return exports.prepareForQueryBuilder(statsElements);
};
exports.getListFields = (reportColumns) => {
    const fieldsWithLabels = lodash_1.cloneDeep(reportColumns);
    // "currency" has to be there for "value" type of fields
    // "id" has to be there for navigating user to deal detail view
    return exports.prepareForQueryBuilder([...fieldsWithLabels, 'currency', 'id']);
};
