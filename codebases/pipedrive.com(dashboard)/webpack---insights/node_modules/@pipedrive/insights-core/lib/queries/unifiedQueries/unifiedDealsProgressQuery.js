"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.generateUnifiedDealsProgressQuery = void 0;
const unifiedQueryBuilderHelpers_1 = require("../../builders/unifiedQuery/unifiedQueryBuilderHelpers");
const unifiedTypes_1 = require("../../types/unifiedTypes");
const unifiedQueryFragments_1 = require("../../builders/unifiedQuery/unifiedQueryFragments");
exports.generateUnifiedDealsProgressQuery = (queryBuilder, queryParameters) => {
    const { rootQueryField, rootQueryArguments, subQueryFields, reportArguments, reportStatisticsFields, listArguments, listFields, exportListArguments, fieldFields, } = queryParameters;
    queryBuilder.addRootQuery({
        rootQueryField,
        weighted: rootQueryArguments.isWeightedValue,
        filters: unifiedQueryBuilderHelpers_1.getFilters(rootQueryArguments.filterByFilter),
        measureBy: rootQueryArguments.measureByFilter,
        groupBy: unifiedQueryBuilderHelpers_1.getGroupBy({
            interval: rootQueryArguments.interval,
            groupBy: rootQueryArguments.groupByFilter,
        }),
        segmentBy: unifiedQueryBuilderHelpers_1.getSegmentBy({
            segmentBy: rootQueryArguments.segmentByFilter,
            segmentSize: rootQueryArguments.segmentSize,
        }),
        currency: rootQueryArguments.defaultCurrency,
    });
    const getQueryOption = Object.freeze({
        [unifiedTypes_1.UnifiedApiQueryField.REPORT]: () => {
            queryBuilder.addReportQuery({
                reportStatisticsFields,
                reportArguments,
            });
        },
        [unifiedTypes_1.UnifiedApiQueryField.LIST]: () => {
            queryBuilder.addListQuery({ listFields, listArguments });
            if (unifiedQueryBuilderHelpers_1.hasCustomFields(listFields)) {
                queryBuilder.addFragment(unifiedQueryFragments_1.CUSTOM_FIELDS_FRAGMENT);
            }
        },
        [unifiedTypes_1.UnifiedApiQueryField.EXPORT_LIST]: () => {
            queryBuilder.addExportListQuery({
                format: exportListArguments.format,
                fields: exportListArguments.fields,
            });
        },
        [unifiedTypes_1.UnifiedApiQueryField.FIELDS]: () => {
            queryBuilder.addFieldQuery(fieldFields);
            queryBuilder.addFragment(unifiedQueryFragments_1.FIELD_FRAGMENT);
            if (fieldFields.includes(unifiedTypes_1.UnifiedApiFieldsField.FILTER)) {
                queryBuilder.addFragment(unifiedQueryFragments_1.FILTERABLE_FIELD_FRAGMENT);
            }
            if (fieldFields.includes(unifiedTypes_1.UnifiedApiFieldsField.GROUP_BY)) {
                queryBuilder.addFragment(unifiedQueryFragments_1.GROUPABLE_FIELD_FRAGMENT);
            }
        },
    });
    subQueryFields.forEach((field) => getQueryOption[field]());
};
