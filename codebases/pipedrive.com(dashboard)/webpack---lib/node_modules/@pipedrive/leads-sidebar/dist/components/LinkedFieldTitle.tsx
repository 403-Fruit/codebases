import React from 'react';
import { useTranslator } from '@pipedrive/react-utils';
import { colors } from '@pipedrive/convention-ui-css/dist/js/variables';
import styled from 'styled-components';

import { Link } from './Link';

type Props = {
	readonly title: string;
	readonly pathUrl: string;
	readonly isDeleted: boolean;
};

// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types
export function LinkedFieldTitle(props: Props) {
	const translator = useTranslator();

	const handleOnClick = (e: React.MouseEvent<HTMLAnchorElement>) => {
		const isClickingOnAnchorLink = (e.target as HTMLAnchorElement).href !== undefined;
		if (!isClickingOnAnchorLink) {
			e.preventDefault();
			return;
		}
	};

	const isDeletedLabel = props.isDeleted ? (
		<IsDeletedLabel data-testid="LinkedFieldTitleIsDeletedLabel">{translator.gettext('(deleted)')}</IsDeletedLabel>
	) : null;

	return (
		<LinkTitleWrapper>
			<Link
				padding="0 4px 0 56px"
				margin="0 0 0 -56px"
				href={props.pathUrl}
				rel="noopener noreferrer"
				onClick={handleOnClick}
				data-testid="LinkedFieldTitleText"
			>
				{props.title}
			</Link>
			{isDeletedLabel}
		</LinkTitleWrapper>
	);
}

const LinkTitleWrapper = styled.div`
	display: flex;
	align-items: baseline;
	justify-content: left;
`;

const IsDeletedLabel = styled.div`
	font-size: 13px;
	line-height: 16px;
	color: ${colors.black64Opaque};
`;
