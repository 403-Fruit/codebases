import React from 'react';
import { createFragmentContainer, graphql } from '@pipedrive/relay';

import { CustomField } from '../CustomField';
import { formatGraphQLTimeInRange } from '../format/formatGraphQLTime';

import type { CustomFieldTimeRange_data } from './__generated__/CustomFieldTimeRange_data.graphql';

type Props = {
	readonly data: CustomFieldTimeRange_data;
};

const CustomFieldTimeRangeWithoutData: React.FC<Props> = ({ data }) => {
	const timeStart = formatGraphQLTimeInRange(data.timeRangeStart);
	const timeEnd = formatGraphQLTimeInRange(data.timeRangeEnd);
	return (
		<CustomField
			icon="timerange"
			type="timerange"
			value={`${timeStart} â€“ ${timeEnd}`}
			data={data}
			isDisabled={true}
			onUpdate={() => Promise.resolve(false)}
		/>
	);
};

export const CustomFieldTimeRange = createFragmentContainer(CustomFieldTimeRangeWithoutData, {
	data: graphql`
		fragment CustomFieldTimeRange_data on CustomFieldTimeRange {
			...CustomField_data
			timeRangeStart: start
			timeRangeEnd: end
		}
	`,
});
