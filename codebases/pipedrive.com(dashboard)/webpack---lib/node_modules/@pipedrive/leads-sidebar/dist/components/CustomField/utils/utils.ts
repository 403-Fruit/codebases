import { isNumeric } from '@adeira/js';

import { Currency } from '../../../types/types';
const formatLocale = (locale: string) => locale.replace('_', '-');

export const formatNumber = (input: number | null, locale: string = 'en-US'): string => {
	if (input === null) {
		return '';
	}

	if (!isNumeric(input)) {
		throw new Error(`Given input is not a number, "${typeof input}" given.`);
	}

	return input.toLocaleString(formatLocale(locale));
};

export type Monetary = {
	value: number;
	currency: string;
};

// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types
export const formatMonetary = (input: Monetary, currency: Currency, locale?: string) => {
	const value = formatNumber(input.value, locale);

	return `${value} ${currency.symbol}`;
};
