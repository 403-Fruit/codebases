import React from 'react';

import { EditFieldProps } from '../EditField';
import { Settings } from '../../types/types';

type ContextType = {
	readonly enableEditableCustomFields: boolean;
	readonly isDeleted: boolean;
	readonly settings: Settings;
} & Pick<EditFieldProps, 'currencies'>;

const defaultContextValue: ContextType = {
	currencies: [],
	enableEditableCustomFields: false,
	isDeleted: false,
	settings: {},
};

type Props = {
	readonly children: React.ReactNode;
	readonly enableEditableCustomFields: boolean;
	readonly isDeleted?: boolean;
	readonly settings: Settings;
} & Pick<EditFieldProps, 'currencies'>;

export const EditableCustomFieldsContext = React.createContext<ContextType>(defaultContextValue);

// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types
export function EditableCustomFieldsContextProvider({
	children,
	currencies,
	enableEditableCustomFields,
	isDeleted = false,
	settings,
}: Props) {
	return (
		<EditableCustomFieldsContext.Provider value={{ currencies, isDeleted, enableEditableCustomFields, settings }}>
			{children}
		</EditableCustomFieldsContext.Provider>
	);
}
