// ============================================================
// components: progress bar
// ============================================================

$map: $progress-bar-map;

@mixin progress-bar-container {
  background-color: $vds-color-silver-lighter;
  border: 0;
  width: 100%;
}

// sass-lint:disable force-pseudo-nesting

.#{$namespace}-progress-bar {
  @include spacing(stack, 2x);
  display: flex;
  flex-direction: column;
  width: 100%;

  &:last-of-type {
    @include spacing(stack, none);
  }

  &__label {
    @include type-style(text-sm);
    margin-bottom: 0;
    max-width: unset;

    .#{$namespace}-progress-bar--inverse & {
      color: color(white);
    }
  }

  progress {
    @include progress-bar-container;

    // Chrome + Safari progress container
    &::-webkit-progress-bar {
      @include progress-bar-container;
    }
  }

  // label alignment
  // ============================================================
  &--inline {
    align-items: center;
    flex-direction: row;

    progress {
      @include spacing(inline, 1x);
    }

    .#{$namespace}-progress-bar__value {
      margin-bottom: 0;
    }
  }

  @each $alignment in $text-align-list {
    &--#{$alignment} {
      progress {
        @include spacing(stack, 1x);
      }

      .#{$namespace}-progress-bar__label {
        text-align: $alignment;
      }
    }
  }

  // variant styles
  // ============================================================
  @each $variant in map-keys($map) {
    &--#{$variant} {
      progress {
        @if $variant == "inverse" {
          background-color: $vds-color-silver-dark;

          &::-webkit-progress-bar {
            background-color: $vds-color-silver-dark;
          }
        }

        // Chrome + Safari progress progress value
        &::-webkit-progress-value {
          background-color: map-get($map, $variant);
        }

        // Firefox
        &::-moz-progress-bar {
          background-color: map-get($map, $variant);
        }
      }
    }
  }

  // size modifiers
  // ==========================================================
  @each $size in map-keys($progress-bar-size-map) {
    &--#{$size} {
      $border-radius-value: map-deep-get($progress-bar-size-map, $size, border-radius);
      $height-value: map-deep-get($progress-bar-size-map, $size, height);

      progress {
        border-radius: $border-radius-value;
        height: $height-value;

        // Chrome + Safari progress container
        &::-webkit-progress-bar {
          border-radius: $border-radius-value;
          height: $height-value;
        }

        // Chrome + Safari progress progress value
        &::-webkit-progress-value {
          border-radius: $border-radius-value;
          height: $height-value;
        }

        // Firefox
        &::-moz-progress-bar {
          border-radius: $border-radius-value;
          height: $height-value;
        }
      }
    }
  }
}

// RTL support
// ============================================================
@include rtl {
  .#{$namespace}-progress-bar {
    &--inline {
      .#{$namespace}-progress-bar__label {
        @include spacing(inline, 1x);
      }

      progress {
        @include spacing(inline, none);
      }
    }

    &--left {
      .#{$namespace}-progress-bar__label {
        text-align: right;
      }
    }

    &--right {
      .#{$namespace}-progress-bar__label {
        text-align: left;
      }
    }
  }
}
