// ============================================================
// mixin: font-weight
// ============================================================

///
/// Returns the font-weight value for the specified font-family if defined.
///
/// @param {String} $font-weight [regular] - The font-weight
/// <br/><br/> One of: `light, regular, semibold`
/// @param {String} $font-family [text] - The font-family
/// <br/><br/> One of:  `text, code`
///
/// @example scss - Usage
///  .element {
///    @include font-weight(semibold, text);
///  }
///
/// @example css - CSS Output
///  .element {
///    font-weight: 600;
///  }
///

@mixin font-weight($font-weight: regular, $font-family: text) {
  $map: $font-weight-map;

  @if map-has-key($map, $font-family) {
    @if map-deep-get($map, $font-family, $font-weight) {
      font-weight: map-deep-get($map, $font-family, $font-weight);
    } @else {
      $nested-map: map-get($map, $font-family);
      @error "Font-weight `#{$font-weight}` not defined for font-family `#{$font-family}.` #{map-list-values($nested-map)}";
    }
  } @else {
    @error "Font-family `#{$font-family}` not found. #{map-list-values($map)}";
  }
}
