import * as React from "react";
import { ChevronDown } from "@bbyca/bbyca-components";
import { analytics } from "../../utils/Analytics";
import ScreenBreakpointEnum from "../../utils/ScreenBreakpointEnum";
import GreetingMenu from "../AccountMenu/GreetingMenu";
import { ProfileInitial } from "../AccountMenu/ProfileInitial";
import ClickAwayListener from "../ClickAwayListener";
import AuthenticatedUnknownSvg from "../SignInOutNav/SignInNav/icon/AuthenticatedUnknownSvg";
import FlyoutMenuContent from "./FlyoutMenuContent";
import * as styles from "./styles.css";
const renderIconGreetingLink = (firstName) => (firstName ? (React.createElement(ProfileInitial, { firstName: firstName })) :
    (React.createElement("span", { className: styles.unknownUserIconContainer, "data-automation": "authenticated-unknown-user" },
        React.createElement(AuthenticatedUnknownSvg, { className: styles.authenticatedUnknown }))));
const renderGreetingMenu = (firstName, locale) => (React.createElement(GreetingMenu, { locale: locale, firstName: firstName, profileInitialClassName: styles.flyoutContainerProfile }));
const renderContent = (accountDashboardUrl, cieServiceUrl, displayFlyoutContent, locale, onSignOutSuccess) => (React.createElement(FlyoutMenuContent, { cieServiceUrl: cieServiceUrl, display: displayFlyoutContent, locale: locale, accountDashboardUrl: accountDashboardUrl, onSignOutSuccess: onSignOutSuccess }));
export const FlyoutMenu = ({ accountDashboardUrl, cieServiceUrl, locale, firstName, onSignOutSuccess, toggleFlyoutOverlay, screenBreakpoint, }) => {
    const [displayFlyoutContent, setDisplayFlyoutContent] = React.useState(false);
    const myAccountLink = accountDashboardUrl + "/" + locale;
    const handleProfileInitialExternalLink = React.useCallback(() => {
        if (screenBreakpoint === ScreenBreakpointEnum.small) {
            analytics.eventToSessionStorage("Greetings; SignedIn");
        }
        else {
            analytics.eventToSessionStorage("Icon; Signed In");
        }
    }, [screenBreakpoint]);
    const handleToggleClick = React.useCallback((e) => {
        e.preventDefault();
        setDisplayFlyoutContent(!displayFlyoutContent);
        if (toggleFlyoutOverlay) {
            toggleFlyoutOverlay(!displayFlyoutContent);
        }
    }, [displayFlyoutContent, toggleFlyoutOverlay]);
    const handleClickAway = React.useCallback(() => {
        if (displayFlyoutContent) {
            setDisplayFlyoutContent(false);
            if (toggleFlyoutOverlay) {
                toggleFlyoutOverlay(false);
            }
        }
    }, [displayFlyoutContent, toggleFlyoutOverlay]);
    if (screenBreakpoint !== ScreenBreakpointEnum.extraSmall && screenBreakpoint !== ScreenBreakpointEnum.small) {
        return (React.createElement(ClickAwayListener, { active: displayFlyoutContent, onClickAway: handleClickAway },
            React.createElement("div", { className: styles.flyoutMenuWrapper },
                React.createElement("div", { className: styles.flyoutMenu, "data-automation": "flyout-menu" },
                    React.createElement("a", { onClick: handleToggleClick, "data-automation": "greeting-link" },
                        React.createElement("span", { className: styles.greetingMessageWrapper }, renderGreetingMenu(firstName, locale)),
                        React.createElement("span", { className: styles.flyoutChevronContainer },
                            React.createElement(ChevronDown, { color: "white", className: styles.flyoutMenuChevron, viewBox: "0 0 32 32" })))),
                renderContent(accountDashboardUrl, cieServiceUrl, displayFlyoutContent, locale, onSignOutSuccess))));
    }
    return (React.createElement("div", { className: styles.myAccountLinkContainer },
        React.createElement("a", { className: styles.myAccountLink, "data-automation": "my-account-link", href: myAccountLink, onClick: handleProfileInitialExternalLink },
            React.createElement("div", { className: styles.iconGreetingLinkContainer }, renderIconGreetingLink(firstName)),
            React.createElement("div", { className: styles.greetingMenuContainer }, renderGreetingMenu(firstName, locale)))));
};
export default FlyoutMenu;
//# sourceMappingURL=index.js.map