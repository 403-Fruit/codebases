const accessTokenCookieName = "ta";
const recognizedIdTokenCookieName = "tir";
const csrfTokenCookieName = "tx";
const customerCookieName = "cid";
export const cieUtilities = {
    isUserSignedIn: () => {
        if (typeof document === "undefined") {
            return false;
        }
        return !!getCookie(accessTokenCookieName);
    },
    /**
     * Returns true if the user has previously signed in during
     * the browser session, returns false otherwise
     */
    isUserRecognized: () => {
        if (typeof document === "undefined") {
            return false;
        }
        return !!getCookie(recognizedIdTokenCookieName);
    },
    /**
     * Returns the decoded customer cookie value if it exists; Returns null otherwise.
     */
    getCustomerIdCookie: () => {
        const customerInfoValue = getCookie(customerCookieName);
        if (!customerInfoValue) {
            return null;
        }
        try {
            return JSON.parse(decodeURIComponent(customerInfoValue));
        }
        catch (e) {
            return null;
        }
    },
    /**
     * Returns the access token value if it exists; Returns null otherwise.
     */
    getAccessToken: () => {
        const accessTokenValue = getCookie(accessTokenCookieName);
        return accessTokenValue ? accessTokenValue : null;
    },
    /**
     * Returns the recognized id token value if it exists; Returns null otherwise.
     */
    getRecognizedIdToken: () => {
        const recognizedIdToken = getCookie(recognizedIdTokenCookieName);
        return recognizedIdToken ? recognizedIdToken : null;
    },
    /**
     * Returns the csrf token value if it exists in the cookies;
     * Calls cie-service to retrieve one if it does not exist in the cookies.
     */
    getCsrfToken: () => {
        const csrfToken = getCookie(csrfTokenCookieName);
        return csrfToken ? csrfToken : null;
    },
    buildSignInUrl: (cieServiceUrl, locale = "en-CA", redirectUrl, contextId) => {
        const windowHref = (typeof window !== "undefined") ? window.location.href : "";
        const redirectTo = redirectUrl || windowHref;
        const signInUrl = `${cieServiceUrl}/global/signin`
            + `?redirectUrl=${encodeURIComponent(redirectTo)}`
            + `&lang=${encodeURIComponent(locale)}`
            + (contextId ? `&contextId=${encodeURIComponent(contextId)}` : "");
        return signInUrl;
    },
};
export default cieUtilities;
/**
 * Returns a cookie, that's not http-only, if found; Returns null otherwise
 */
function getCookie(cookieName) {
    if (typeof document !== "undefined") {
        const regexp = new RegExp("(?:(?:^|.*;\\s*)" + cookieName + "\\s*\\=\\s*([^;]*).*$)|^.*$");
        return document.cookie.replace(regexp, "$1");
    }
    return null;
}
//# sourceMappingURL=cieUtilities.js.map