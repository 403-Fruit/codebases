function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import * as React from 'react';
import { pure } from 'recompose';
import SvgIcon from "../../SvgIcon";

var SvgThumbsUpFilled = function SvgThumbsUpFilled(_ref) {
  var _ref$title = _ref.title,
      title = _ref$title === void 0 ? 'Thumbs Up' : _ref$title,
      props = _objectWithoutProperties(_ref, ["title"]);

  return React.createElement(SvgIcon, _extends({
    title: title
  }, props, {
    viewBox: "0 0 48 48"
  }), React.createElement("path", {
    d: "M35.28 48H17.309c-6.31 0-11.705-4.816-12.55-11.2L2 20.159h7.614L23.237 0l.774.37c2.63 1.258 4.419 3.204 5.17 5.628.798 2.57.357 5.599-1.21 8.308l-1.662 2.98c-.42.847-.491 1.647-.17 2.152.304.482.993.72 1.903.72h8.481c1.237 0 4.366.264 6.705 2.703 1.999 2.083 2.925 5.203 2.752 9.272C45.583 41.417 37.702 48 35.28 48z"
  }));
};

SvgThumbsUpFilled = pure(SvgThumbsUpFilled);
SvgThumbsUpFilled.displayName = 'SvgThumbsUpFilled';
export default SvgThumbsUpFilled;