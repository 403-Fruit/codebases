function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import * as React from 'react';
import { pure } from 'recompose';
import SvgIcon from "../../SvgIcon";

var SvgaMountain = function SvgaMountain(_ref) {
  var _ref$title = _ref.title,
      title = _ref$title === void 0 ? 'Mountain' : _ref$title,
      rest = _objectWithoutProperties(_ref, ["title"]);

  return React.createElement(SvgIcon, _extends({
    title: title
  }, rest, {
    viewBox: "0 0 60 60"
  }), React.createElement("g", {
    fill: "none",
    fillRule: "evenodd"
  }, React.createElement("path", {
    fill: "#D670AC",
    d: "M27.374 43.267l-8.76-9.794L4 58h54l-7.94-14.733L38.717 24z"
  }), React.createElement("g", {
    stroke: "#333",
    strokeLinejoin: "round",
    strokeWidth: "2"
  }, React.createElement("path", {
    d: "M36.555 20.265l-.65-17.951 14.67 4.028-14.31 7.142"
  }), React.createElement("path", {
    d: "M55.75 52.747H2.254l14.478-24.062 8.677 9.608 11.238-18.9 11.237 18.9z"
  }))));
};

SvgaMountain = pure(SvgaMountain);
SvgaMountain.displayName = 'SvgaMountain';
export default SvgaMountain;