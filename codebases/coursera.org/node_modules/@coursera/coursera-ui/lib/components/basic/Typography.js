function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

//
import * as React from 'react';
import { css, StyleSheet, fontFamily, color } from "../../styles/theme";
var styles = StyleSheet.create({
  fontHeadline: {
    fontFamily: fontFamily.headline
  },
  fontBody: {
    fontFamily: fontFamily.body
  },
  fontDisplay: {
    fontFamily: fontFamily.display
  },
  bold: {
    fontFamily: fontFamily.bold
  },
  displayBold: {
    fontFamily: fontFamily.displayBold
  },
  weightLighter: {
    fontWeight: 'lighter'
  },
  weightNormal: {
    fontWeight: 'normal'
  },
  weightBold: {
    fontWeight: 'bold'
  },
  H1: {
    fontSize: '3rem',
    lineHeight: '3.75rem'
  },
  H1Xl: {
    fontSize: '3.75rem',
    lineHeight: '4.5rem'
  },
  H2: {
    fontSize: '2.125rem',
    lineHeight: '2.625rem'
  },
  H3: {
    fontSize: '1.5rem',
    lineHeight: '1.875rem'
  },
  H4: {
    fontSize: '1.25rem',
    lineHeight: '1.5rem'
  },
  P: {
    fontSize: '0.875rem',
    lineHeight: '1.5rem'
  },
  Strong: {
    fontSize: '0.875rem',
    lineHeight: '1.5rem'
  },
  Caption: {
    fontSize: '0.75rem',
    lineHeight: '1.125rem',
    color: color.textPrimary
  },
  Label: {
    fontSize: '0.75rem',
    lineHeight: '1.125rem',
    textTransform: 'uppercase'
  }
}); // We set font weight through both font-weight and font-family properties
// because if the browser fails to load font file, it will use fall back font family with the specified font-weight.
// https://graphicdesign.stackexchange.com/questions/74966/setting-font-weight-vs-bold-font-family-in-css-which-is-more-correct

export function H1(_ref) {
  var rootClassName = _ref.rootClassName,
      tag = _ref.tag,
      rest = _objectWithoutProperties(_ref, ["rootClassName", "tag"]);

  var Tag = tag || 'h1';
  return React.createElement(Tag, _extends({}, css(rootClassName, styles.H1, styles.weightNormal, styles.fontHeadline), rest));
}
export function H2(_ref2) {
  var rootClassName = _ref2.rootClassName,
      tag = _ref2.tag,
      rest = _objectWithoutProperties(_ref2, ["rootClassName", "tag"]);

  var Tag = tag || 'h2';
  return React.createElement(Tag, _extends({}, css(rootClassName, styles.H2, styles.weightNormal, styles.fontHeadline), rest));
}
export function H3(_ref3) {
  var rootClassName = _ref3.rootClassName,
      tag = _ref3.tag,
      rest = _objectWithoutProperties(_ref3, ["rootClassName", "tag"]);

  var Tag = tag || 'h3';
  return React.createElement(Tag, _extends({}, css(rootClassName, styles.H3, styles.weightNormal, styles.fontHeadline), rest));
}
export function H4Light(_ref4) {
  var rootClassName = _ref4.rootClassName,
      tag = _ref4.tag,
      rest = _objectWithoutProperties(_ref4, ["rootClassName", "tag"]);

  var Tag = tag || 'h4';
  return React.createElement(Tag, _extends({}, css(rootClassName, styles.H4, styles.weightLighter, styles.fontHeadline), rest));
}
export function H4(_ref5) {
  var rootClassName = _ref5.rootClassName,
      tag = _ref5.tag,
      rest = _objectWithoutProperties(_ref5, ["rootClassName", "tag"]);

  var Tag = tag || 'h4';
  return React.createElement(Tag, _extends({}, css(rootClassName, styles.H4, styles.weightNormal, styles.fontBody), rest));
}
export function H4Bold(_ref6) {
  var rootClassName = _ref6.rootClassName,
      tag = _ref6.tag,
      rest = _objectWithoutProperties(_ref6, ["rootClassName", "tag"]);

  var Tag = tag || 'h4';
  return React.createElement(Tag, _extends({}, css(rootClassName, styles.H4, styles.weightBold, styles.bold), rest));
}
export function View(_ref7) {
  var rootClassName = _ref7.rootClassName,
      tag = _ref7.tag,
      rest = _objectWithoutProperties(_ref7, ["rootClassName", "tag"]);

  var Tag = tag || 'div';
  return React.createElement(Tag, _extends({}, css(rootClassName, styles.P, styles.weightNormal, styles.fontBody), rest));
}
export function P(_ref8) {
  var rootClassName = _ref8.rootClassName,
      tag = _ref8.tag,
      rest = _objectWithoutProperties(_ref8, ["rootClassName", "tag"]);

  var Tag = tag || 'p';
  return React.createElement(Tag, _extends({}, css(rootClassName, styles.P, styles.weightNormal, styles.fontBody), rest));
}
export function Strong(_ref9) {
  var rootClassName = _ref9.rootClassName,
      tag = _ref9.tag,
      rest = _objectWithoutProperties(_ref9, ["rootClassName", "tag"]);

  var Tag = tag || 'strong';
  return React.createElement(Tag, _extends({}, css(rootClassName, styles.Strong, styles.weightBold, styles.fontBody), rest));
}
export function Caption(_ref10) {
  var rootClassName = _ref10.rootClassName,
      tag = _ref10.tag,
      rest = _objectWithoutProperties(_ref10, ["rootClassName", "tag"]);

  var Tag = tag || 'div';
  return React.createElement(Tag, _extends({}, css(rootClassName, styles.Caption, styles.weightNormal, styles.fontBody), rest));
}
export function Label(_ref11) {
  var rootClassName = _ref11.rootClassName,
      tag = _ref11.tag,
      rest = _objectWithoutProperties(_ref11, ["rootClassName", "tag"]);

  var Tag = tag || 'label';
  return React.createElement(Tag, _extends({}, css(rootClassName, styles.Label, styles.weightBold, styles.bold), rest));
}
export function H1Xl(_ref12) {
  var rootClassName = _ref12.rootClassName,
      tag = _ref12.tag,
      rest = _objectWithoutProperties(_ref12, ["rootClassName", "tag"]);

  var Tag = tag || 'h1';
  return React.createElement(Tag, _extends({}, css(rootClassName, styles.H1Xl, styles.weightNormal, styles.fontHeadline), rest));
}
export function H1BoldXl(_ref13) {
  var rootClassName = _ref13.rootClassName,
      tag = _ref13.tag,
      rest = _objectWithoutProperties(_ref13, ["rootClassName", "tag"]);

  var Tag = tag || 'h1';
  return React.createElement(Tag, _extends({}, css(rootClassName, styles.H1Xl, styles.weightBold, styles.bold), rest));
}
export function H2Bold(_ref14) {
  var rootClassName = _ref14.rootClassName,
      tag = _ref14.tag,
      rest = _objectWithoutProperties(_ref14, ["rootClassName", "tag"]);

  var Tag = tag || 'h2';
  return React.createElement(Tag, _extends({}, css(rootClassName, styles.H2, styles.weightBold, styles.bold), rest));
}
export function H1Display(_ref15) {
  var rootClassName = _ref15.rootClassName,
      tag = _ref15.tag,
      rest = _objectWithoutProperties(_ref15, ["rootClassName", "tag"]);

  var Tag = tag || 'h1';
  return React.createElement(Tag, _extends({}, css(rootClassName, styles.H1, styles.weightNormal, styles.fontDisplay), rest));
}
export function H1DisplayBoldXl(_ref16) {
  var rootClassName = _ref16.rootClassName,
      tag = _ref16.tag,
      rest = _objectWithoutProperties(_ref16, ["rootClassName", "tag"]);

  var Tag = tag || 'h1';
  return React.createElement(Tag, _extends({}, css(rootClassName, styles.H1Xl, styles.weightBold, styles.displayBold), rest));
}