function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

//
import * as React from 'react';
import PropTypes from 'prop-types';
import { css, StyleSheet, gradient } from "../../styles/theme";
/**
 * A GradientWrapper that accepts children
 * Sample Usage:
 * <GradientWrapper tag={Box} flexDirection="column"> Content here <GradientWrapper>
 */

var GradientWrapper = function GradientWrapper(_ref) {
  var _ref$gradient = _ref.gradient,
      start = _ref$gradient.start,
      end = _ref$gradient.end,
      deg = _ref$gradient.deg,
      rootClassName = _ref.rootClassName,
      Tag = _ref.tag,
      rest = _objectWithoutProperties(_ref, ["gradient", "rootClassName", "tag"]);

  return React.createElement(Tag, _extends({}, css(rootClassName, StyleSheet.create({
    gradientBg: {
      backgroundImage: "linear-gradient(".concat(deg || 90, "deg, ").concat(start, ", ").concat(end, ")")
    }
  }).gradientBg), rest));
}; // Explicity declare the default props for documentation purpose


GradientWrapper.defaultProps = {
  gradient: gradient.coursera,
  tag: 'div'
};
GradientWrapper.propTypes = {
  rootClassName: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),
  gradient: PropTypes.shape({
    start: PropTypes.string.isRequired,
    end: PropTypes.string.isRequired,
    deg: PropTypes.number.isRequired
  }).isRequired,
  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string])
};
export default GradientWrapper;