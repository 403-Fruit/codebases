function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

//
import * as React from 'react';
import { CenterBox } from "./Box";
import { SvgLoaderSignal } from "../../svg";
export default function Loading(_ref) {
  var hideLoader = _ref.hideLoader,
      _ref$iconProps = _ref.iconProps,
      iconProps = _ref$iconProps === void 0 ? {} : _ref$iconProps,
      _ref$iconSize = _ref.iconSize,
      iconSize = _ref$iconSize === void 0 ? 64 : _ref$iconSize,
      loadingMessage = _ref.loadingMessage,
      rest = _objectWithoutProperties(_ref, ["hideLoader", "iconProps", "iconSize", "loadingMessage"]);

  return React.createElement(CenterBox, rest, !hideLoader && React.createElement(SvgLoaderSignal, _extends({
    size: iconSize
  }, iconProps)), loadingMessage);
}