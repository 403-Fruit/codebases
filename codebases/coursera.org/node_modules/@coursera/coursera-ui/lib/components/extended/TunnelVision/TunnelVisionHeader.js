//
import * as React from 'react';
import PropTypes from 'prop-types';
import { css, color, StyleSheet, fontFamily } from "../../../styles/theme";
import TunnelVisionClose from "./TunnelVisionClose";
var styles = StyleSheet.create({
  TunnelVisionHeader: {
    borderBottom: "1px solid ".concat(color.border),
    display: 'flex',
    flexWrap: 'nowrap'
  },
  headerContainer: {
    flex: 1,
    display: 'flex',
    alignItems: 'center',
    fontFamily: fontFamily.body,
    margin: 0
  }
});

var TunnelVisionHeader = function TunnelVisionHeader(_ref) {
  var handleClose = _ref.handleClose,
      closeElement = _ref.closeElement,
      headerElement = _ref.headerElement,
      _ref$showCloseTooltip = _ref.showCloseTooltip,
      showCloseTooltip = _ref$showCloseTooltip === void 0 ? false : _ref$showCloseTooltip,
      tooltipLabel = _ref.tooltipLabel,
      backbuttonAriaLabel = _ref.backbuttonAriaLabel;
  return React.createElement("div", {
    className: "rc-TunnelVisionHeader ".concat(css(styles.TunnelVisionHeader).className)
  }, React.createElement(TunnelVisionClose, {
    closeElement: closeElement,
    handleClose: handleClose,
    showTooltip: showCloseTooltip,
    label: tooltipLabel,
    backbuttonAriaLabel: backbuttonAriaLabel
  }), React.createElement("div", css(styles.headerContainer), headerElement));
};

TunnelVisionHeader.propTypes = {
  headerElement: PropTypes.element,
  handleClose: PropTypes.func,
  showCloseTooltip: PropTypes.bool,
  tooltipLabel: PropTypes.string,
  backbuttonAriaLabel: PropTypes.string
};
export default TunnelVisionHeader;