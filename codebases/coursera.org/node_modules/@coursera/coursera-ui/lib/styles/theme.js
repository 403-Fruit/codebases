function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }

function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }

//
import { StyleSheet, css } from '@coursera/aphrodite/no-important';
import classNames from 'classnames';
import transition from "./transition";
import { coursera, strawberry, peach, pear, kiwi, sea, blueberry, grape, productCardSpecialization } from "./gradients"; // Easier to write with ...css than always use className as it's not strictly className

function cssWithClass() {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  /**
   * This function has been updated in https://phabricator.dkandu.me/D103061
   * It used to have a condition checking whether the first argument is a string, and
   * pass the rest to aphrodite. Aphrodite does not handle strings (class names)!
   */
  var styles = args.reduce(function (all, item) {
    return typeof item !== 'string' ? [].concat(_toConsumableArray(all), [item]) : all;
  }, []);
  var aphroditeClassName = css.apply(void 0, _toConsumableArray(styles));
  var otherClassNames = args.reduce(function (all, item) {
    return typeof item === 'string' ? [].concat(_toConsumableArray(all), [item]) : all;
  }, []);
  return {
    className: classNames.apply(void 0, [aphroditeClassName].concat(_toConsumableArray(otherClassNames))) || undefined
  };
}

export { StyleSheet };
export { cssWithClass as css };
export { cssWithClass };
export { transition };
var containerMaxWidth = {
  xs: 288,
  sm: 576,
  md: 792,
  lg: 1008,
  // 936, 960 doesn't fit for 12 points
  xl: 1152,
  xxl: 1440
};
var color = {
  primary: '#2A73CC',
  darkPrimary: '#0156B8',
  lightPrimary: '#82A8E1',
  accent: '#3BAFDA',
  aliceBlue: '#F5F7FA',
  navyBlue: '#263674',
  skyBlue: '#1E9EF5',
  lightCyan: '#E7FDFF',
  deepAzure: '#083E7D',
  primaryText: '#1F1F1F',
  primaryTextThemeDark: '#FFFFFF',
  secondaryText: '#666666',
  secondaryTextThemeDark: '#F5F7FA',
  lightGrayText: '#969696',
  divider: '#E1E1E1',
  dividerLight: '#F0F0F0',
  dividerThemeDark: '#BDBDBD',
  border: '#BDBDBD',
  borderThemeDark: '#E1E1E1',
  borderFocused: '#2A73CC',
  disabled: '#BDBDBD',
  disabledThemeDark: '#646668',
  disabledText: '#FDFEFF',
  disabledTextThemeDark: '#E3E4E5',
  bgGray: '#F5F5F5',
  bgGrayThemeMid: '#888888',
  bgGrayThemeDark: '#757575',
  bgDarkGray: '#666666',
  bgPaper: '#F5F5F5',
  icon: '#363B42',
  iconThemeDark: '#EBECED',
  shadow: '#E6E9ED',
  lightGray: '#FDFEFF',
  gray: '#EBECED',
  darkGray: '#CCD1D9',
  white: '#FFF',
  black: '#1F1F1F',
  warning: '#F7BB56',
  danger: '#E85628',
  // TODO rename as 'alert'
  error: '#D30001',
  success: '#1F8354',
  info: '#20589D',
  bgWarning: '#FCEBCE',
  bgDanger: '#FBE5DF',
  // TODO rename as 'alert'
  bgError: '#FFE0E5',
  bgSuccess: '#DFF3EA',
  bgInfo: '#EAF4FE',
  admin: '#0D47A1',
  superUser: '#9C27B0' // b2c: '#37BC9B',
  // b2b: '#5D9CEC',
  // degree: '#3BAFDA',

};
export { color };
var spacing = {
  minWidth: 360,
  // Smallest screen we want to support
  xxs: '0.1875rem',
  xs: '0.375rem',
  sm: '0.75rem',
  md: '1.125rem',
  lg: '1.5rem',
  xl: '3rem',
  xxl: '4.5rem'
};
export { spacing };
var iconSize = {
  xxs: 14,
  xs: 18,
  sm: 24,
  md: 32,
  lg: 48,
  xl: 64,
  xxl: 128
};
export { iconSize };
var breakPoint = {
  xs: containerMaxWidth.xs + 32,
  sm: containerMaxWidth.sm + 32,
  md: containerMaxWidth.md + 32,
  lg: containerMaxWidth.lg + 32,
  xl: containerMaxWidth.xl + 32,
  xxl: containerMaxWidth.xxl + 32
};
export { breakPoint };
export { containerMaxWidth };
var gradient = {
  primary: coursera,
  secondary: strawberry,
  coursera: coursera,
  strawberry: strawberry,
  peach: peach,
  pear: pear,
  kiwi: kiwi,
  sea: sea,
  blueberry: blueberry,
  grape: grape,
  productCardSpecialization: productCardSpecialization
};
export { gradient };
var zIndex = {
  none: 0,
  xs: 1000,
  sm: 2000,
  // FixedContainer
  md: 3000,
  // SmartScrollWrapper
  lg: 4000,
  xl: 10000,
  // Critical, e.g. modal
  xxl: 10001
};
export { zIndex };
var font = {
  xxs: '0.625rem',
  xs: '0.75rem',
  sm: '0.875rem',
  md: '1.25rem',
  lg: '1.5rem',
  xl: '2.125rem',
  xxl: '3rem',
  xxxl: '4.5rem'
};
export { font };
var fontWeight = {
  light: '300',
  normal: '400',
  semibold: '600',
  bold: '700'
};
export { fontWeight };
var fontFamily = {
  body: 'OpenSans, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif',
  headline: "'OpenSans-Light', OpenSans, Arial, sans-serif",
  display: "'Merriweather-Light', Georgia, serif",
  bold: "'OpenSans-Bold', OpenSans, Arial, sans-serif",
  displayBold: "'Merriweather', Georgia, serif"
};
export { fontFamily };
var shimmerAnimationDuration = 1.3;
var shimmerKeyframes = {
  '0%': {
    backgroundPosition: '-468px 0'
  },
  '100%': {
    backgroundPosition: '468px 0'
  }
};
var shimmerStyles = StyleSheet.create({
  shimmer: {
    animationName: shimmerKeyframes,
    animationDuration: "".concat(shimmerAnimationDuration, "s"),
    animationIterationCount: 'infinite',
    animationDillMode: 'forwards',
    animationTimingFunction: 'linear',
    background: 'linear-gradient(to right, #eeeeee 8%, #dddddd 18%, #eeeeee 33%)',
    backgroundSize: '1000px 104px',
    position: 'relative',
    overflow: 'hidden'
  }
});
var placeholder = {
  animationDuration: shimmerAnimationDuration,
  keyframes: shimmerKeyframes,
  styles: shimmerStyles
};
export { placeholder };
export default {
  StyleSheet: StyleSheet,
  css: cssWithClass,
  cssWithClass: cssWithClass,
  transition: transition,
  spacing: spacing,
  color: color,
  iconSize: iconSize,
  breakPoint: breakPoint,
  containerMaxWidth: containerMaxWidth,
  gradient: gradient,
  zIndex: zIndex,
  font: font,
  fontWeight: fontWeight,
  fontFamily: fontFamily,
  placeholder: placeholder
};